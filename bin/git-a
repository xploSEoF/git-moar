#!/bin/bash

declare -a parameters=()
declare -a files=()
declare -A listed_new=()
declare -A listed_new_files=()
declare -A listed_new_folders=()
declare -a new_files=()
declare -a modified_files=()
declare -a folder_check=()
IFS=$'\n'

function _confirm() {
	message="Stage this new ${2:-file}? [y/n/q"

	help_message=$(cat <<EOF
\e[91my - stage this new $1\e[0m
\e[91mn - do not stage this new file\e[0m
\e[91mq - quit; do not stage this file or any of the remaining ones\e[0m
EOF
)

	if [[ -n "$2" ]];then
		message="$message/s"
		help_message=$(cat <<EOF
$help_message
\e[91ms - split the folder into parts\e[0m
EOF
)
	fi

	message="$message]"

	while true;do
		read -rep $'\e[94m'"$message"$'\e[0m '

		if [[ -n "$2" && $REPLY =~ ^[Ss] ]];then
			return 3
		elif [[ $REPLY =~ ^[Qq] ]];then
			return 2
		elif [[ $REPLY =~ ^[Nn] ]];then
			return 1
		elif [[ $REPLY =~ ^[Yy] ]];then
			return
		fi

		echo -e "$help_message"
	done
}

function within_new_folder() {
	for within_new_folder_d in "${listed_new_folders[@]}";do
		if [[ "$1" =~ ^$within_new_folder_d ]];then
			echo "$1"
			return
		fi
	done
}

function include_new_file() {
	if [[ -d "$1" ]];then
		echo -e "\e[97mdiff --git a/$1 b/$1\e[0m"
		echo -e "\e[97mnew folder mode 100755\e[0m" #TODO
		echo -e "\e[97m--- /dev/null\e[0m"
		echo -e "\e[97m+++ b/$1\e[0m"
		_confirm "$1" "folder"
		response="$?"
		echo
		if [[ "$response" == "0" ]];then
			git add "${parameters[@]}" -- "$1"
		elif [[ "$response" == "2" ]];then
			exit
		elif [[ "$response" == "3" ]];then
			for include_new_file_f in $(ls "$1");do
				include_new_file "$1$include_new_file_f"
			done
		fi
	else
		git diff --color -- /dev/null  "$1"
		_confirm "$1"
		response="$?"
		echo
		if [[ "$response" == "0" ]];then
			git add "${parameters[@]}" -- "$1"
		elif [[ "$response" == "2" ]];then
			exit
		fi
	fi
}

for file in $(git status --porcelain | grep '^?? ' | sed -E 's#^\?\? ##');do
	listed_new["$file"]="$file"
	if [[ "$file" =~ /$ ]];then
		listed_new_folders["$file"]="$file"
	else
		listed_new_files["$file"]="$file"
	fi
done

git status --porcelain | grep '^[^?!]' >/dev/null 2>&1
git_status="$?"

for param in "$@";do
	case "$param" in
		(--)
			param_stop=true
			;;
		(-*)
			if [[ -z "$param_stop" ]];then
				parameters+=("$param")
			else
				files+=("$param")
			fi
			;;
		(*)
			files+=("$param")
			;;
	esac
done

for f in "${files[@]}";do
	if [[ -d $f ]];then
		f="$f/"
		if [[ $(within_new_folder "$f") ]];then
			new_files+=("$f")
			continue
		else
			for f2 in "${listed_new[@]}";do
				if [[ "$f2" =~ ^$f ]];then
					new_files+=("$f2")
				fi
			done
		fi
	else
		if [[ "${listed_new_files["$f"]}" ]];then
			new_files+=("$f")
			continue
		fi
		if [[ $(within_new_folder "$f") ]];then
			new_files+=("$f")
			continue
		fi
	fi

	modified_files+=("$f")
done

if [[ "$git_status" == "0" && (${#new_files[@]} == 0 || ${#modified_files[@]} > 0) ]];then
	git add -p "${parameters[@]}" -- "${modified_files[@]}"
fi

if [[ ${#new_files[@]} > 0 || ${#modified_files[@]} > 0 ]];then
	for f in "${new_files[@]}";do
		include_new_file "$f"
	done
else
	for f in "${listed_new[@]}";do
		include_new_file "$f"
	done
fi

unset IFS
